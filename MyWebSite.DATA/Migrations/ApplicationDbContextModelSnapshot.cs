// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebSite.DATA.Context;

#nullable disable

namespace MyWebSite.DATA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyWebSite.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("72fa7a61-d195-4e38-955c-c285f989d108"),
                            CategoryId = new Guid("7dd728b5-eb76-4624-bc94-25e3b9c1bde1"),
                            Content = "lorem ipsum dolor hello world deneme makale içeriği data seed aşamasındali denemeler.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 2, 15, 3, 21, 30, 202, DateTimeKind.Local).AddTicks(9263),
                            ImageId = new Guid("7dd728b5-eb76-4624-bc94-25e3b9c1bde1"),
                            IsDeleted = false,
                            Title = "Asp .NET Core Deneme Makalesi",
                            ViewCount = 15
                        },
                        new
                        {
                            ID = new Guid("3b5dc384-ca1e-4bd9-9192-a167ca8b7072"),
                            CategoryId = new Guid("38321b2d-2af8-4b6e-9d05-4cc56c4f7695"),
                            Content = "lorem ipsum dolor hello world deneme makale içeriği data seed aşamasındali denemeler.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 2, 15, 3, 21, 30, 202, DateTimeKind.Local).AddTicks(9274),
                            ImageId = new Guid("abb2a50c-f530-4b5e-8342-67bc682b126e"),
                            IsDeleted = false,
                            Title = "Hello World",
                            ViewCount = 25
                        });
                });

            modelBuilder.Entity("MyWebSite.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7dd728b5-eb76-4624-bc94-25e3b9c1bde1"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 2, 15, 3, 21, 30, 202, DateTimeKind.Local).AddTicks(9771),
                            IsDeleted = false,
                            Name = "ASP .NET CORE"
                        },
                        new
                        {
                            ID = new Guid("38321b2d-2af8-4b6e-9d05-4cc56c4f7695"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 2, 15, 3, 21, 30, 202, DateTimeKind.Local).AddTicks(9777),
                            IsDeleted = false,
                            Name = "Visual Studio"
                        });
                });

            modelBuilder.Entity("MyWebSite.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7dd728b5-eb76-4624-bc94-25e3b9c1bde1"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 2, 15, 3, 21, 30, 203, DateTimeKind.Local).AddTicks(74),
                            FileName = "images/testimage",
                            FileType = "jpg",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = new Guid("abb2a50c-f530-4b5e-8342-67bc682b126e"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 2, 15, 3, 21, 30, 203, DateTimeKind.Local).AddTicks(80),
                            FileName = "images/testimage",
                            FileType = "jpg",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("MyWebSite.Entity.Entities.Article", b =>
                {
                    b.HasOne("MyWebSite.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebSite.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("MyWebSite.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("MyWebSite.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
